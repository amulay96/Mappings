{
  "content" : {
    "allowMaxFieldLength" : "false",
    "bigIntConvertType" : "ONLY_BIGINT",
    "documentType" : "MAPPING",
    "name" : "SHA256MappingJAVA",
    "specialCharacterSupport" : "false",
    "links" : [
      {
        "link" : "Java -> Target"
      },
      {
        "link" : "Source -> Java"
      }
    ],
    "transformations" : [
      {
        "createTime" : "2025-06-17T17:47:17.816Z",
        "name" : "Source",
        "advancedProperties" : [
          {
            "name" : "Tracing Level",
            "value" : "Normal"
          },
          {
            "name" : "Output is deterministic",
            "value" : "false"
          },
          {
            "name" : "Thousand Separator",
            "value" : "None"
          },
          {
            "name" : "Decimal Separator",
            "value" : "."
          }
        ],
        "groups" : [
          {
            "input" : "false",
            "name" : "DefaultGroup",
            "output" : "true"
          }
        ],
        "sessionProperties" : [
          {
            "name" : "File Reader Truncate String Null",
            "value" : "NO"
          }
        ],
        "generateFilenamePort" : "false",
        "useLabels" : "false",
        "useSequenceFields" : "false",
        "fields" : [
          {
            "adapterField" : {
              "name" : "Informatica"
            },
            "name" : "Informatica",
            "platformType" : {
              "name" : "string"
            },
            "precision" : 255,
            "scale" : 0
          }
        ],
        "dataAdapter" : {
          "connectionId" : "saas:@aPCkpndCsORe7V5RuvKxWG",
          "connectionName" : "FFT_Normalizer_Source",
          "excludeDynamicFileNameField" : "false",
          "objectType" : "SINGLE",
          "typeSystem" : "CSVFile",
          "useDynamicFileName" : "false",
          "object" : {
            "name" : "input.txt",
            "label" : "input.txt",
            "objectName" : "input.txt",
            "path" : "input.txt",
            "retainMetadata" : "false",
            "fields" : [
              {
                "name" : "Informatica",
                "fieldType" : "CONNECTOR",
                "label" : "Informatica",
                "nativeName" : "Informatica",
                "nativeType" : "nstring",
                "original" : "false",
                "precision" : 255,
                "scale" : 0,
                "properties" : [
                  {
                    "name" : "parentObject",
                    "value" : "input.txt"
                  }
                ]
              }
            ],
            "fileAttrs" : {
              "consecutiveDelimiter" : "false",
              "delimiter" : ",",
              "firstDataRow" : 2,
              "firstDataRowAsHeader" : "false",
              "headerAndDataDelimiter" : 0,
              "headerLineNo" : 1,
              "multiDelimitersAsAnd" : "true",
              "rowDelimiter" : 0,
              "textQualifier" : "\""
            }
          },
          "readOptions" : {
            "commandType" : 0,
            "descending" : "false",
            "queryAll" : "false",
            "rowLimit" : 0,
            "selectDistinct" : "false"
          }
        }
      },
      {
        "createTime" : "2025-06-17T17:47:17.820Z",
        "name" : "Target",
        "advancedProperties" : [
          {
            "name" : "Forward Rejected Rows",
            "value" : "true"
          },
          {
            "name" : "Thousand Separator",
            "value" : "None"
          },
          {
            "name" : "Decimal Separator",
            "value" : "."
          }
        ],
        "groups" : [
          {
            "input" : "true",
            "name" : "DefaultGroup",
            "output" : "false",
            "rules" : [
              {
                "bulkRename" : "false",
                "include" : "true"
              }
            ]
          }
        ],
        "sessionProperties" : [
          {
            "name" : "Append if Exists",
            "value" : "NO"
          },
          {
            "name" : "Create Target Directory",
            "value" : "NO"
          },
          {
            "name" : "Header Options",
            "value" : "Output Field Names"
          },
          {
            "name" : "Output Type",
            "value" : "File"
          }
        ],
        "createTarget" : "true",
        "fieldMappingMode" : "BY_NAME",
        "inputSorted" : "false",
        "schemaProviderType" : "SELECTED_OBJECT",
        "targetFieldsOrdered" : "false",
        "updateColumns" : null,
        "useLabels" : "false",
        "useSequenceFields" : "false",
        "dataAdapter" : {
          "connectionId" : "saas:@aPCkpndCsORe7V5RuvKxWG",
          "connectionName" : "FFT_Normalizer_Source",
          "excludeDynamicFileNameField" : "false",
          "objectType" : "SINGLE",
          "typeSystem" : "CSVFile",
          "useDynamicFileName" : "false",
          "bulkOptions" : {
            "hardDelete" : "false",
            "maxRowsPerRequest" : 0,
            "monitorBulk" : "false",
            "monitorBulkV2" : "false",
            "pkChunkingEnabled" : "false",
            "pkChunkingSize" : 0,
            "serialMode" : "false",
            "useBulkApi" : "false",
            "useBulkApiV2" : "false"
          },
          "object" : {
            "name" : "outputJava.txt",
            "label" : "outputJava.txt",
            "path" : "outputJava.txt",
            "retainMetadata" : "false",
            "fileAttrs" : {
              "consecutiveDelimiter" : "false",
              "delimiter" : ",",
              "firstDataRow" : 2,
              "firstDataRowAsHeader" : "false",
              "headerAndDataDelimiter" : 0,
              "headerLineNo" : 1,
              "multiDelimitersAsAnd" : "true",
              "rowDelimiter" : 0,
              "textQualifier" : "\""
            }
          },
          "writeOptions" : {
            "batchSize" : 0,
            "bulkApi" : "false",
            "handleDecimalRoundOff" : "false",
            "handleSpecialChars" : "false",
            "operations" : [
              "Insert"
            ],
            "setFieldsToNull" : "false",
            "truncate" : "false",
            "useErrorFile" : "false",
            "useExactSrcNames" : "false",
            "useSuccessFile" : "false"
          }
        }
      },
      {
        "createTime" : "2025-06-17T17:48:00.062Z",
        "name" : "Java",
        "groups" : [
          {
            "input" : "true",
            "name" : "DefaultGroup",
            "output" : "true",
            "rules" : [
              {
                "bulkRename" : "false",
                "include" : "true"
              }
            ]
          }
        ],
        "helperCodeSnippet" : "// TODO: Declare static and non-static partition-level variables and functions here.\n// For example,\n//\n// static int countNullRows;   // Counts the number of output rows across all partitions that contains null values.\n// int partCountNullRows;      // Counts the number of output rows in this partition that contains null values.\n//\n// static Object lock = new Object();   // Lock to synchronize countNullRows.\n",
        "importPackagesSnippet" : "import java.nio.charset.StandardCharsets;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.Base64;\nimport java.io.*;\n// TODO: Enter the Java packages to be imported here.\n// For example, if you want to use Hashtable in any of the snippets, import it as shown below:\n//\n// import java.util.Hashtable;\n",
        "lastCompilationFailed" : "false",
        "onEndOfDataMethodSnippet" : "// TODO: Enter the code that executes after the transformation receives all of the input data here.\n//\n// logInfo(\"The number of null rows for this partition is: \" + partCountNullRows);\n// synchronized(lock)\n// {\n//\t\tlogInfo(\"The total number of null rows across partitions until now is: \" +  countNullRows);\n// }\n",
        "onInputRowMethodSnippet" : "// TODO: Enter the code to process an input row here.\n// You can access input column data by referencing the input column name.\n// You can set output column data by referencing the output column name.\n// For example, if\n// input1 and input2 are input fields of type int, and\n// output1 and output2 are output fields of type int,\n// then the transformation logic might be as follows:\n//\n// if(!isNull(\"input1\") && !isNull(\"input1\"))\n// {\n//\t\toutput1 = input1 + input2;\n//\t\toutput2 = input1 - input2;\n// }\n// else\n// {\n//\t\tsetNull(\"output1\");\n//\t\tsetNull(\"output2\");\n//\t\tpartCountNullRows++;\n//\t\tsynchronized(lock)\n//\t\t{\n//\t\t\tcountNullRows++;\n//\t\t}\n// }\n\ntry{\n  MessageDigest md = MessageDigest.getInstance(\"SHA-256\");\n  byte[] hashBytes = md.digest(Informatica.getBytes(StandardCharsets.UTF_8));\n  O_Informatica= Base64.getEncoder().encodeToString(hashBytes);\n}catch (NoSuchAlgorithmException e) {\n            System.err.println(\"Error: SHA-256 algorithm not found.\");\n        }\n",
        "onTransactionMethodSnippet" : "// TODO: Enter the code that executes when the transformation receives a transaction here.\n",
        "runtimeEnvId" : "010STY250000000000BG",
        "sorterModeJava" : "SIMPLE",
        "unmodifiedCompilation" : "true",
        "compiledInputFields" : [
          {
            "name" : "Informatica",
            "precision" : 255,
            "scale" : 0,
            "type" : "string"
          }
        ],
        "outputFields" : [
          {
            "name" : "O_Informatica",
            "platformType" : {
              "name" : "string"
            },
            "precision" : 255,
            "scale" : 0
          }
        ]
      }
    ]
  },
  "vcsExportTime" : "2025-07-21 08:39:24 PDT"
}